name: Predict, Deploy & Auto-Heal Pipeline

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  ECR_REPO: ${{ secrets.ECR_REPO }}

jobs:
  build-deploy-heal:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v3

    - name: Build and Push Docker Image
      run: |
        docker build -t $ECR_REPO:${{ github.sha }} app
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
        docker tag $ECR_REPO:${{ github.sha }} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:${{ github.sha }}
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPO:${{ github.sha }}

    - name: Deploy to EKS
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      run: |
        aws eks update-kubeconfig --region $AWS_REGION --name ${{ secrets.EKS_CLUSTER_NAME }}
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml

    - name: Predict Failure Probability
      id: predict
      run: |
        echo '{"cpu_usage":85.0,"memory_usage":70.0,"error_count":1,"test_passed":true,"build_time":90}' > metrics.json
        prob=$(python ml_model/predict_failure.py --input-json metrics.json)
        echo "fail_prob=$prob"
        echo "fail_prob=$prob" >> $GITHUB_OUTPUT

    - name: Auto-Heal if Needed
      if: ${{ steps.predict.outputs.fail_prob >= '0.75' }}
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
      run: |
        python pipeline/scripts/smart_auto_heal.py \
          --deployment your-app-deployment \
          --namespace default \
          --replicas 3
