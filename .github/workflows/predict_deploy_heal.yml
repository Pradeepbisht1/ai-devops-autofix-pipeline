name: Predict, Deploy & Auto‑Heal

on: [workflow_dispatch, push]

env:
  AWS_DEFAULT_REGION:  ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCOUNT_ID:      ${{ secrets.AWS_ACCOUNT_ID }}
  ECR_REPO:            ${{ secrets.ECR_REPO }}
  IMAGE_TAG:           "1.2-1-cpu-py3"
  MODEL_IMAGE_URI:     "709825985650.dkr.ecr.ap-southeast-2.amazonaws.com/sagemaker-scikit-learn:1.2-1-cpu-py3"

jobs:
  build-deploy-heal:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}

    - name: Ensure ECR repos exist
      run: |
        for repo in $ECR_REPO sklearn-inference ; do
          aws ecr describe-repositories --repository-names $repo \
            || aws ecr create-repository --repository-name $repo
        done

    - name: Build & push APP image
      env: { DOCKER_BUILDKIT: 0 }
      run: |
        docker build --platform linux/amd64 -t $ECR_REPO:${{ github.sha }} app
        docker tag $ECR_REPO:${{ github.sha }} \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:${{ github.sha }}
        aws ecr get-login-password --region $AWS_DEFAULT_REGION | \
          docker login -u AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
        docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:${{ github.sha }}

    # mirror step removed – using public DLC URI

    - name: Upload model artefact
      run: aws s3 cp ml_model/models/model.tar.gz ${{ secrets.MODEL_S3_PATH }}

    - name: Deploy APP to EKS
      run: |
        kubectl set image deployment/your-app-deployment \
          app-container=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$ECR_REPO:${{ github.sha }}
        kubectl rollout status deployment/your-app-deployment --timeout=120s

    - uses: actions/setup-python@v4
      with: { python-version: '3.10' }

    - name: Predict failure probability
      id: predict
      run: |
        prob=$(python ml_model/predict_failure.py --input-json '{"cpu":80}')
        echo "fail_prob=$prob" >> $GITHUB_OUTPUT

    - name: Auto-heal if needed
      if: ${{ fromJson(steps.predict.outputs.fail_prob) >= 0.75 }}
      env: { SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} }
      run: |
        python pipeline/scripts/smart_auto_heal.py \
          --deployment your-app-deployment --namespace default --replicas 3
        curl -X POST -H "Content-Type: application/json" \
          --data "{\"text\":\"Auto‑heal done (fail_prob=${{ steps.predict.outputs.fail_prob }}).\"}" \
          "$SLACK_WEBHOOK_URL"
